// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
    Register(in=nextPC, load=true, out=out, out=currentPC);
    Inc16(in=currentPC, out=incrementedPC);

    // sel[1] = not reset * not load
    Not(in=reset, out=notReset);
    Not(in=load, out=notLoad);
    And(a=notReset, b=notLoad, out=sel1);

    // sel[0] = not reset * (load + not inc)
    Not(in=inc, out=notInc);
    Or(a=load, b=notInc, out=temp);
    And(a=notReset, b=temp, out=sel0);

    Mux4Way16(a=false, b=in, c=incrementedPC, d=currentPC, sel[1]=sel1, sel[0]=sel0, out=nextPC);
}
    